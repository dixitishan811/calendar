name: Daily Sync
on:
  schedule:
    # 10:00 IST (04:30 UTC)
    - cron: "30 4 * * *"
    # 19:00 IST (13:30 UTC)
    - cron: "30 13 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

env:
  UPSTREAM_OWNER: Debanshu777
  UPSTREAM_REPO: XCalendar

jobs:
  drip:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read progress
        id: progress
        run: echo "idx=$(cat progress.txt)" >> $GITHUB_OUTPUT

      - name: Get next commit
        id: next
        run: |
          total=$(wc -l < commits.txt | tr -d ' ')
          idx=${{ steps.progress.outputs.idx }}
          if [ "$idx" -ge "$total" ]; then
            echo "done=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          sha=$(sed -n "$((idx+1))p" commits.txt)
          echo "sha=$sha" >> $GITHUB_OUTPUT

      - name: Exit if done
        if: steps.next.outputs.done == 'true'
        run: echo "All commits already replayed."

      - name: Download upstream snapshot (zipball)
        if: steps.next.outputs.done != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHA: ${{ steps.next.outputs.sha }}
        run: |
          set -euo pipefail
          rm -rf snapshot snapshot.zip
          curl -sSL -H "Authorization: Bearer ${GH_TOKEN}" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/repos/${UPSTREAM_OWNER}/${UPSTREAM_REPO}/zipball/${SHA}" \
               -o snapshot.zip
          unzip -q snapshot.zip -d snapshot
          inner=$(find snapshot -mindepth 1 -maxdepth 1 -type d | head -n1)

          # Clean repo and move files in
          rm -rf ./* .[^.]* 2>/dev/null || true
          shopt -s dotglob
          mv "$inner"/* .
          shopt -u dotglob
          rm -rf snapshot snapshot.zip

      - name: Get original commit message
        if: steps.next.outputs.done != 'true'
        id: msg
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHA: ${{ steps.next.outputs.sha }}
        run: |
          set -euo pipefail
          commit_json=$(curl -sSL -H "Authorization: Bearer ${GH_TOKEN}" \
            "https://api.github.com/repos/${UPSTREAM_OWNER}/${UPSTREAM_REPO}/commits/${SHA}")
          msg=$(python3 - <<'PY'
          import sys, json
          data=json.load(sys.stdin)
          print(data["commit"]["message"])
          PY
          <<<"$commit_json")
          printf '%s\n' "$msg" > .commitmsg.txt

      - name: Commit snapshot
        if: steps.next.outputs.done != 'true'
        env:
          AUTHOR: ${{ github.repository_owner }}
        run: |
          git config user.name "${AUTHOR}"
          git config user.email "${AUTHOR}@users.noreply.github.com"
          git add -A
          git commit -F .commitmsg.txt

      - name: Update progress
        if: steps.next.outputs.done != 'true'
        run: |
          idx=${{ steps.progress.outputs.idx }}
          echo $((idx+1)) > progress.txt
          git add progress.txt
          git commit -m "progress $((idx+1))"

      - name: Push
        if: steps.next.outputs.done != 'true'
        run: git push origin HEAD:main
